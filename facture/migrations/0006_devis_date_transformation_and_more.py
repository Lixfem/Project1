# Generated by Django 5.2.5 on 2025-09-04 09:48

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('facture', '0005_alter_produit_devisproduit_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='devis',
            name='date_transformation',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='devis',
            name='est_transforme_en_facture',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='facturation',
            name='devis_origine',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures_generees', to='facture.devis'),
        ),
        migrations.AlterField(
            model_name='devis',
            name='statutDevis',
            field=models.IntegerField(choices=[(1, 'En Attente'), (2, 'Accepté'), (3, 'Refusé'), (4, 'Transformé en facture')], default=1),
        ),
        migrations.AlterField(
            model_name='produit',
            name='factureProduit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facture.facturation'),
        ),
        migrations.AlterField(
            model_name='service',
            name='factureService',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='facture.facturation'),
        ),
        migrations.AddConstraint(
            model_name='produit',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('devisProduit__isnull', True), ('factureProduit__isnull', False)), models.Q(('devisProduit__isnull', False), ('factureProduit__isnull', True)), _connector='OR'), name='produit_facture_ou_devis'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('devisService__isnull', True), ('factureService__isnull', False)), models.Q(('devisService__isnull', False), ('factureService__isnull', True)), _connector='OR'), name='service_facture_ou_devis'),
        ),
    ]
