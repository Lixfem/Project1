# Generated by Django 5.2.6 on 2025-10-16 09:37

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import encrypted_model_fields.fields
import facture.utils
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'categorie',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='ModeReglement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('est_actif', models.BooleanField(default=True, help_text='Indique si ce mode de règlement est disponible pour une utilisation.')),
                ('date_creation', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mode de règlement',
                'verbose_name_plural': 'Modes de règlement',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_type', models.CharField(choices=[('INDIVIDU', 'Individu'), ('ENTREPRISE', 'Entreprise')], default='INDIVIDU', max_length=20)),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=50)),
                ('adresse', models.TextField()),
                ('ville', models.CharField(blank=True, max_length=50)),
                ('sexe', models.CharField(blank=True, choices=[('Masculin', 'Masculin'), ('Feminin', 'Féminin')], max_length=15)),
                ('company_id_number', models.CharField(blank=True, max_length=45)),
                ('company_iban', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('company_bic', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('save_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('statut', models.IntegerField(choices=[(1, 'En Attente'), (2, 'Accepté'), (3, 'Refusé'), (4, 'Transformé en facture')], default=1)),
                ('numero', models.CharField(max_length=50, unique=True)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('commentaire', models.TextField(blank=True, help_text='Entrer un commentaire sur le devis', null=True)),
                ('net_a_payer', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('taux_tva', models.DecimalField(blank=True, decimal_places=2, default=Decimal('18.00'), max_digits=5, null=True)),
                ('total_net_ht', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_tva', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_ttc', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('date_validite', models.DateField(default=facture.utils.default_validity_date)),
                ('est_transforme_en_facture', models.BooleanField(default=False)),
                ('date_transformation', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devis', to='facture.client')),
                ('save_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devis', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Facturation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_accompte', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('solde_du', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('statut', models.IntegerField(choices=[(1, 'Payé'), (2, 'En Attente'), (3, 'Annulée')], default=2)),
                ('numero', models.CharField(max_length=50, unique=True)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('commentaire', models.TextField(blank=True, help_text='Entrer un commentaire sur la facture', null=True)),
                ('net_a_payer', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('taux_tva', models.DecimalField(blank=True, decimal_places=2, default=Decimal('18.00'), max_digits=5, null=True)),
                ('total_tva', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_net_ht', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_ttc', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='facture.client')),
                ('devis_origine', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='facture_generee', to='facture.devis')),
                ('save_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='factures', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_produit', models.CharField(max_length=40, unique=True)),
                ('description_produit', models.CharField(max_length=400)),
                ('prix_unitaire_produit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='facture.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProduitDevis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('remise', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('devis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produitdevis_set', to='facture.devis')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produitdevis_set', to='facture.produit')),
            ],
        ),
        migrations.AddField(
            model_name='devis',
            name='produits',
            field=models.ManyToManyField(related_name='devis', through='facture.ProduitDevis', to='facture.produit'),
        ),
        migrations.CreateModel(
            name='ProduitFacturation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('remise', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produitfacturation_set', to='facture.facturation')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produitfacturation_set', to='facture.produit')),
            ],
        ),
        migrations.AddField(
            model_name='facturation',
            name='produits',
            field=models.ManyToManyField(related_name='factures', through='facture.ProduitFacturation', to='facture.produit'),
        ),
        migrations.CreateModel(
            name='Reglement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reglement', models.DateField(auto_now_add=True)),
                ('montant_reglement', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reglements', to='facture.client')),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reglement_set', to='facture.facturation')),
                ('mode_reglement', models.ForeignKey(limit_choices_to={'est_actif': True}, on_delete=django.db.models.deletion.CASCADE, to='facture.modereglement')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_service', models.CharField(max_length=60, unique=True)),
                ('description_service', models.CharField(max_length=400)),
                ('montant_du_service', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'indexes': [models.Index(fields=['nom_service'], name='facture_ser_nom_ser_f136b0_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServiceDevis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prestation_service', models.DateField(blank=True, null=True)),
                ('devis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicedevis_set', to='facture.devis')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicedevis_set', to='facture.service')),
            ],
        ),
        migrations.AddField(
            model_name='devis',
            name='services',
            field=models.ManyToManyField(related_name='devis', through='facture.ServiceDevis', to='facture.service'),
        ),
        migrations.CreateModel(
            name='ServiceFacturation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prestation_service', models.DateField(blank=True, null=True)),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicefacturation_set', to='facture.facturation')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicefacturation_set', to='facture.service')),
            ],
        ),
        migrations.AddField(
            model_name='facturation',
            name='services',
            field=models.ManyToManyField(related_name='factures', through='facture.ServiceFacturation', to='facture.service'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['email'], name='facture_cli_email_d3601b_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['telephone'], name='facture_cli_telepho_9f4e39_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['client_type'], name='facture_cli_client__579c67_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['date_creation'], name='facture_cli_date_cr_c90596_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['category'], name='facture_pro_categor_16832f_idx'),
        ),
        migrations.AddIndex(
            model_name='produit',
            index=models.Index(fields=['nom_produit'], name='facture_pro_nom_pro_339677_idx'),
        ),
        migrations.AddIndex(
            model_name='reglement',
            index=models.Index(fields=['facture'], name='facture_reg_facture_cdc4ab_idx'),
        ),
        migrations.AddIndex(
            model_name='reglement',
            index=models.Index(fields=['client'], name='facture_reg_client__5c8e87_idx'),
        ),
        migrations.AddIndex(
            model_name='reglement',
            index=models.Index(fields=['date_reglement'], name='facture_reg_date_re_09f436_idx'),
        ),
        migrations.AddIndex(
            model_name='reglement',
            index=models.Index(fields=['facture', 'date_reglement'], name='facture_reg_facture_f09c06_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['numero'], name='facture_dev_numero_813a63_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['date_creation'], name='facture_dev_date_cr_8a47c3_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['statut'], name='facture_dev_statut_21c24b_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['client', 'statut'], name='facture_dev_client__ee68a0_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['-date_validite'], name='facture_dev_date_va_766d6b_idx'),
        ),
        migrations.AddIndex(
            model_name='devis',
            index=models.Index(fields=['-date_creation'], name='facture_dev_date_cr_45369a_idx'),
        ),
        migrations.AddIndex(
            model_name='facturation',
            index=models.Index(fields=['numero'], name='facture_fac_numero_00940b_idx'),
        ),
        migrations.AddIndex(
            model_name='facturation',
            index=models.Index(fields=['date_creation'], name='facture_fac_date_cr_0fd4c2_idx'),
        ),
        migrations.AddIndex(
            model_name='facturation',
            index=models.Index(fields=['statut'], name='facture_fac_statut_ebe088_idx'),
        ),
        migrations.AddIndex(
            model_name='facturation',
            index=models.Index(fields=['client', 'statut'], name='facture_fac_client__ba217f_idx'),
        ),
        migrations.AddIndex(
            model_name='facturation',
            index=models.Index(fields=['-date_creation'], name='facture_fac_date_cr_07270d_idx'),
        ),
    ]
